<?xml version="1.0" encoding="UTF-8"?>

<!-- Spring集成redis replication配置，对应配置文件：redis-replication.properties -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/cache 
		http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- 配置jedisPoolConfig -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${jedis.pool.maxTotal}" />
		<property name="maxIdle" value="${jedis.pool.maxIdle}" />
		<property name="minIdle" value="${jedis.pool.minIdle}" />
		<property name="numTestsPerEvictionRun" value="${jedis.pool.numTestsPerEvictionRun}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jedis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jedis.pool.minEvictableIdleTimeMillis}" />
		<property name="softMinEvictableIdleTimeMillis" value="${jedis.pool.softMinEvictableIdleTimeMillis}" />
		<property name="maxWaitMillis" value="${jedis.pool.maxWaitMillis}" />
		<property name="testOnBorrow" value="${jedis.pool.testOnBorrow}" />
		<property name="testWhileIdle" value="${jedis.pool.testWhileIdle}" />
		<property name="blockWhenExhausted" value="${jedis.pool.blockWhenExhausted}" />
	</bean>

	<!-- 配置jedisConnectionFactory -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<!-- <property name="password" value="${redis.password}" /> -->
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<!-- 配置redisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<!-- 支持事务 -->
		<property name="enableTransactionSupport" value="true" />
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
		</property>
	</bean>

	<!-- 打开缓存的注解驱动 -->
	<cache:annotation-driven />

	<!-- 配置cacheManager -->
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate" />
		<!-- 默认有效期,单位:秒 -->
		<property name="defaultExpiration" value="3600" />
		<!-- 多个缓存有效期,单位:秒 -->
		<property name="expires">
			<map>
				<entry key="user" value="10" />
			</map>
		</property>
	</bean>

	<!-- 配置redisCacheConfig -->
	<bean id="redisCacheConfig" class="com.sunveee.template.ssm.redis.RedisCacheConfig">
		<constructor-arg ref="jedisConnectionFactory" />
		<constructor-arg ref="redisTemplate" />
		<constructor-arg ref="cacheManager" />
	</bean>

	<!-- 配置redisLockRegistry -->
	<bean id="redisLockRegistry"
		class="org.springframework.integration.redis.util.RedisLockRegistry">
		<constructor-arg
			type="org.springframework.data.redis.connection.RedisConnectionFactory"
			ref="jedisConnectionFactory" />
		<constructor-arg type="java.lang.String" value="${redis.registry.key}" />
	</bean>

</beans>